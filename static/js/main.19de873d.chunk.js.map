{"version":3,"sources":["components/ColorPanel/ColorPanel.js","firebase.js","components/SidePanel/UserPanel.js","components/SidePanel/Channels.js","actions/index.js","actions/types.js","components/SidePanel/SidePanel.js","components/MetaPanel/MetaPanel.js","components/Messages/MessagesHeader.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Messages.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","serviceWorker.js","reducers/index.js","components/Spinner/Spinner.js","index.js"],"names":["ColorPanel","react_default","a","createElement","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Divider","Button","size","color","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","UserPanel","state","user","_this","props","currentUser","dropdownOptions","key","text","onClick","handleSignout","displayName","auth","signOut","then","console","log","this","Grid","style","background","Column","Row","padding","margin","Header","float","Icon","name","Content","Dropdown","trigger","Image","src","photoURL","spaced","avatar","options","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","database","ref","modal","firstLoad","addListeners","loadedChannels","on","snap","push","val","setState","setFirstChannel","removeListeners","off","firstChannel","length","setCurrentChannel","setActiveChannel","addChannel","_this$state","newChannel","id","details","createdBy","avataer","child","update","closeModal","catch","err","handleSubmit","event","preventDefault","isFormValid","_ref","handleChange","Object","defineProperty","target","value","changeChannel","channel","displayChannels","map","Item","opacity","active","openModal","_this$state2","Fragment","paddingBottom","cursor","Modal","basic","open","onClose","Form","onSubmit","Field","Input","fluid","label","onChange","Actions","connect","type","payload","currentChannel","SidePanel","fixed","fontSize","SidePanel_UserPanel","SidePanel_Channels","MetaPanel","MessagesHeader","Segment","clearing","floated","marginBottom","Subheader","placeholder","MessageForm","message","errors","loading","createMessage","timestamp","ServerValue","TIMESTAMP","uid","content","sendMessage","messagesRef","set","concat","className","labelPosition","some","error","toLowerCase","includes","Group","widths","disabled","Message","isOwnMessage","timeFromNow","moment","fromNow","_this$props","Comment","Avatar","Author","Metadata","Text","Messages","messages","messageLoading","channelId","addMessageListeners","loadedMessages","displayMessages","Messages_Message","Messages_MessagesHeader","Messages_MessageForm","App","columns","components_ColorPanel_ColorPanel","components_SidePanel_SidePanel","marginLeft","components_Messages_Messages","components_MetaPanel_MetaPanel","Login","email","password","displayErrors","i","signInWithEmailAndPassword","signedInUser","handleInputError","inputName","textAlign","verticalAlign","maxWidth","stacked","iconPosition","collections_Message_Message","react_router_dom","to","Register","username","passwordConfirmation","usersRef","isFormEmpty","isPasswordValid","_ref2","createUserWithEmailAndPassword","createdUser","updateProfile","md5","saveUser","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialUserState","isLoading","initialChannelState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","Spinner","Dimmer","Loader","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","components_Spinner_Spinner","react_router","exact","path","component","RootWithAuth","withRouter","ReactDOM","render","es","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.19de873d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Sidebar, Menu, Divider, Button } from 'semantic-ui-react';\r\n\r\nclass ColorPanel extends Component {\r\n  render () {\r\n    return (\r\n      <Sidebar\r\n        as={Menu}\r\n        icon=\"labeled\"\r\n        inverted\r\n        vertical\r\n        visible\r\n        width=\"very thin\"\r\n      >\r\n        <Divider />\r\n        <Button icon=\"add\" size=\"small\" color=\"blue\" />\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPanel;\r\n","import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD81kC17Zu4SSuUDeUFwH4aH5B4wpIQh0k\",\r\n    authDomain: \"slack-react-app-ed83e.firebaseapp.com\",\r\n    databaseURL: \"https://slack-react-app-ed83e.firebaseio.com\",\r\n    projectId: \"slack-react-app-ed83e\",\r\n    storageBucket: \"slack-react-app-ed83e.appspot.com\",\r\n    messagingSenderId: \"104999919466\",\r\n    appId: \"1:104999919466:web:3f6118eea74c3c05\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport { Grid, Header, Icon, Dropdown, Image } from 'semantic-ui-react';\r\n\r\nclass UserPanel extends Component {\r\n    state = {\r\n        user: this.props.currentUser\r\n    }\r\n    \r\n    dropdownOptions = () => [\r\n        {\r\n            key: \"avatar\",\r\n            text: <span>Change Avatar</span>\r\n        },\r\n        {\r\n            key: \"signout\",\r\n            text: <span onClick={this.handleSignout}>Not <strong>{this.state.user.displayName}?</strong> Sign Out</span>\r\n        }\r\n    ]\r\n\r\n    handleSignout = () => {\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => console.log(`Signed Out`));\r\n    }\r\n\r\n  render () {\r\n    const { user } = this.state;\r\n\r\n    return (\r\n      <Grid style={{ background: '4c3c4c' }} >\r\n        <Grid.Column>\r\n            <Grid.Row style={{ padding: '1.2em', margin: 0 }} >\r\n                {/* App Header */}\r\n                <Header inverted float=\"left\" as=\"h2\" >\r\n                    <Icon name=\"code\" />\r\n                    <Header.Content>\r\n                        DevChat\r\n                    </Header.Content>\r\n                </Header>\r\n                {/* User Dropdown */}\r\n                <Header style={{ padding: '0.25em' }} as=\"h4\" inverted >\r\n                    <Dropdown trigger={\r\n                        <span>\r\n                            <Image src={user.photoURL} spaced=\"right\" avatar />\r\n                            <span>{user.displayName}</span>\r\n                        </span>\r\n                    } options={this.dropdownOptions()} />\r\n                </Header>\r\n            </Grid.Row>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPanel;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentChannel } from '../../actions'\r\nimport { Menu, Icon, Modal, Form, Input, Button } from 'semantic-ui-react';\r\n\r\nclass Channels extends Component {\r\n  state = {\r\n    activeChannel: '',\r\n    user: this.props.currentUser,\r\n    channels: [],\r\n    channelName: '',\r\n    channelDetails: '',\r\n    channelsRef: firebase.database().ref('channels'),\r\n    modal: false,\r\n    firstLoad: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addListeners();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  addListeners = () => {\r\n    let loadedChannels = [];\r\n    this.state.channelsRef.on('child_added', snap => {\r\n      loadedChannels.push(snap.val());\r\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\r\n    })\r\n  }\r\n\r\n  removeListeners = () => {\r\n    this.state.channelsRef.off();\r\n  }\r\n\r\n  setFirstChannel = () => {\r\n    const firstChannel = this.state.channels[0];\r\n    if (this.state.firstLoad && this.state.channels.length > 0) {\r\n      this.props.setCurrentChannel(firstChannel);\r\n      this.setActiveChannel(firstChannel);\r\n    }\r\n    this.setState({ firstLoad: false });\r\n  }\r\n\r\n  addChannel = () => {\r\n    const { channelsRef, channelName, channelDetails, user } = this.state;\r\n\r\n    const key = channelsRef.push().key;\r\n\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelName,\r\n      details: channelDetails,\r\n      createdBy: {\r\n        name: user.displayName,\r\n        avataer: user.photoURL\r\n      }\r\n    };\r\n\r\n    channelsRef\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        this.setState({ channelName: '', channelDetails: '' });\r\n        this.closeModal();\r\n        console.log('Channel Added');\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.isFormValid(this.state)) {\r\n      this.addChannel();\r\n    }\r\n  }\r\n\r\n  isFormValid = ({ channelName, channelDetails }) => channelName && channelDetails;\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  changeChannel = channel => {\r\n    this.setActiveChannel(channel);\r\n    this.props.setCurrentChannel(channel);\r\n  }\r\n\r\n  setActiveChannel = channel => {\r\n    this.setState({ activeChannel: channel.id })\r\n  }\r\n\r\n  displayChannels = channels => (\r\n    channels.length > 0 && channels.map(channel => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: '0.7' }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ))\r\n  )\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n  \r\n  closeModal = () => this.setState({ modal: false });\r\n  \r\n  render () {\r\n    const { channels, modal } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Menu.Menu style={{ paddingBottom: '2em' }} >\r\n          <Menu.Item>\r\n              <span>\r\n                  <Icon name=\"exchange\" /> CHANNELS\r\n              </span> {\" \"}\r\n              ({ channels.length }) <Icon name=\"add\" onClick={this.openModal} style={{ cursor: 'pointer' }} />\r\n          </Menu.Item>\r\n          {this.displayChannels(channels)}\r\n        </Menu.Menu>\r\n\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Add a Channel</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit} >\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"Name of Channel\"\r\n                  name=\"channelName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <Input\r\n                    fluid\r\n                    label=\"About Channel\"\r\n                    name=\"channelDetails\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n              </Form.Field>\r\n\r\n            </Form>\r\n          </Modal.Content>\r\n\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSubmit} >\r\n              <Icon name=\"checkmark\" /> Add\r\n            </Button>\r\n\r\n            <Button color=\"red\" inverted onClick={this.closeModal} >\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel })(Channels);\r\n","import * as actionTypes from './types';\r\n\r\n// User Actions\r\nexport const setUser = user => {\r\n    return {\r\n        type: actionTypes.SET_USER,\r\n        payload: {\r\n            currentUser: user\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearUser = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_USER\r\n    }\r\n}\r\n\r\n// Channel Actions\r\nexport const setCurrentChannel = channel => {\r\n    return {\r\n        type: actionTypes.SET_CURRENT_CHANNEL,\r\n        payload: {\r\n            currentChannel: channel\r\n        }\r\n    }\r\n}\r\n","// User Action Types\r\nexport const SET_USER = 'SET_USER';\r\nexport const CLEAR_USER = 'CLEAR_USER';\r\n\r\n// Channel Action Types\r\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport UserPanel from './UserPanel';\r\nimport Channels from './Channels';\r\n\r\nclass SidePanel extends Component {\r\n  render () {\r\n    const {currentUser} = this.props;\r\n\r\n    return (\r\n      <Menu\r\n        size=\"large\"\r\n        inverted\r\n        fixed=\"left\"\r\n        vertical\r\n        style={{ background: '#4c3c4c', fontSize: '1.2em' }}\r\n      >\r\n\r\n        <UserPanel currentUser={currentUser} />\r\n\r\n        <Channels currentUser={currentUser}/>\r\n\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidePanel;\r\n","import React, { Component } from 'react';\r\n\r\nclass MetaPanel extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        MetaPanel\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaPanel;\r\n","import React, { Component } from 'react';\r\nimport { Header, Segment, Input, Icon } from 'semantic-ui-react';\r\n\r\nclass MessagesHeader extends Component {\r\n  render () {\r\n    return (\r\n      <Segment clearing>\r\n        {/* Channel Header */}\r\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }} >\r\n            <span>\r\n                Channel\r\n                <Icon name={\"star outline\"} color=\"black\" />\r\n            </span>\r\n            <Header.Subheader>\r\n                2 Users\r\n            </Header.Subheader>\r\n        </Header>\r\n        {/* Channel Search Messages Input */}\r\n        <Header floated=\"right\" >\r\n            <Input\r\n                size=\"mini\"\r\n                icon=\"search\"\r\n                name=\"searchTerm\"\r\n                placeholder=\"search Messages\"\r\n            />\r\n        </Header>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesHeader;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport { Segment, Input, Button } from 'semantic-ui-react';\r\n\r\nclass MessageForm extends Component {\r\n    state = {\r\n        message: '',\r\n        channel: this.props.currentChannel,\r\n        user: this.props.currentUser,\r\n        errors: [],\r\n        loading: false\r\n    }\r\n    \r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    createMessage = () => {\r\n        const message = {\r\n            timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n            user: {\r\n                id: this.state.user.uid,\r\n                name: this.state.user.displayName,\r\n                avatar: this.state.user.photoURL\r\n            },\r\n            content: this.state.message\r\n        };\r\n        return message;\r\n    }\r\n\r\n    sendMessage = () => {\r\n        const { messagesRef } = this.props;\r\n        const { message, channel } = this.state;\r\n\r\n        if (message) {\r\n            this.setState({ loading: true });\r\n            messagesRef\r\n                .child(channel.id)\r\n                .push()\r\n                .set(this.createMessage())\r\n                .then(() => {\r\n                    this.setState({ loading: false, message: '', errors: [] })\r\n                })\r\n                .catch(err => {\r\n                    this.setState({ loading: false, errors: this.state.errors.concat(err) })\r\n                })\r\n        } else {\r\n            this.setState({\r\n                errors: this.state.errors.concat({ message: 'Add a Message' })\r\n            })\r\n        }\r\n    }\r\n    \r\n  render () {\r\n    const { errors, loading, message } = this.state;\r\n\r\n    return (\r\n      <Segment className=\"message__form\"> \r\n        <Input\r\n            fluid\r\n            name=\"message\"\r\n            onChange={this.handleChange}\r\n            value={message}\r\n            style={{marginBottom: '0.7em'}}\r\n            label={<Button icon=\"add\" />}\r\n            labelPosition=\"left\"\r\n            placeholder=\"Write your message\"\r\n            className={\r\n                errors.some(error => error.message.toLowerCase().includes('message')) ? 'error': ''\r\n            }\r\n        />\r\n        <Button.Group icon widths=\"2\" >\r\n            <Button\r\n                onClick={this.sendMessage}\r\n                disabled={loading}\r\n                color=\"orange\"\r\n                content=\"Add Reply\"\r\n                labelPosition=\"left\"\r\n                icon=\"edit\"\r\n            />\r\n            <Button\r\n                color=\"teal\"\r\n                content=\"Upload Media\"\r\n                labelPosition=\"right\"\r\n                icon=\"cloud upload\"\r\n            />\r\n        </Button.Group>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageForm;\r\n","import React, { Component } from 'react';\r\nimport { Comment } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\n\r\nclass Message extends Component {\r\n    isOwnMessage = (message, user) => {\r\n        return message.user.id === user.uid ? 'message__self' : '';\r\n    }\r\n\r\n    timeFromNow = timestamp => moment(timestamp).fromNow();\r\n    \r\n  render () {\r\n      const { message, user } = this.props;\r\n      \r\n    return (\r\n      <Comment>\r\n        <Comment.Avatar src={message.user.avatar} />\r\n        <Comment.Content className={this.isOwnMessage(message, user)} >\r\n            <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\r\n            <Comment.Metadata>{this.timeFromNow(message.timestamp)}</Comment.Metadata>\r\n            <Comment.Text>{message.content}</Comment.Text>\r\n        </Comment.Content>\r\n      </Comment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport { Segment, Comment } from 'semantic-ui-react';\r\nimport MessagesHeader from './MessagesHeader';\r\nimport MessageForm from './MessageForm';\r\nimport Message from './Message';\r\n\r\nclass Messages extends Component {\r\n  state = {\r\n    messagesRef: firebase.database().ref('messages'),\r\n    messages: [],\r\n    messageLoading: false,\r\n    channel: this.props.currentChannel,\r\n    user: this.props.currentUser\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { channel, user } = this.state;\r\n\r\n    if (channel && user) {\r\n      this.addListeners(channel.id);\r\n    }\r\n  }\r\n\r\n  addListeners = channelId => {\r\n    this.addMessageListeners(channelId);\r\n  }\r\n\r\n  addMessageListeners = channelId => {\r\n    let loadedMessages = [];\r\n    this.state.messagesRef.child(channelId).on('child_added', snap => {\r\n      loadedMessages.push(snap.val());\r\n      this.setState({\r\n        messages: loadedMessages,\r\n        messageLoading: false\r\n      });\r\n    })\r\n  }\r\n\r\n  displayMessages = messages => (\r\n    messages.length > 0 && messages.map(message => (\r\n      <Message\r\n        key={message.timestamp}\r\n        message={message}\r\n        user={this.state.user}\r\n      />\r\n    ))\r\n  )\r\n  \r\n  render () {\r\n    const { messagesRef, messages, channel, user } = this.state;\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <MessagesHeader />\r\n\r\n        <Segment>\r\n          <Comment.Group className=\"messages\" >\r\n            {this.displayMessages(messages)}\r\n          </Comment.Group>\r\n        </Segment>\r\n\r\n        <MessageForm\r\n          messagesRef={messagesRef}\r\n          currentChannel={channel}\r\n          currentUser={user}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Messages;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { Grid } from 'semantic-ui-react';\nimport ColorPanel from './ColorPanel/ColorPanel';\nimport SidePanel from './SidePanel/SidePanel';\nimport MetaPanel from './MetaPanel/MetaPanel';\nimport Messages from './Messages/Messages';\n\nclass App extends Component {\n  render () {\n    const { currentUser, currentChannel } = this.props;\n\n    return (\n      <Grid columns=\"equal\" className=\"app\"  >\n\n        <ColorPanel />\n\n        <SidePanel\n          key={currentUser && currentUser.uid}\n          currentUser={currentUser}\n        />\n\n        <Grid.Column style={{ marginLeft: 320 }}>\n          <Messages \n            key={currentChannel && currentChannel.id} \n            currentChannel={currentChannel} \n            currentUser={currentUser}\n          />\n        </Grid.Column>\n\n        <Grid.Column width={4}>\n          <MetaPanel />\n        </Grid.Column>\n        \n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel\n})\n\nexport default connect(mapStateToProps)(App);\n","import React, { Component } from 'react';\r\nimport { Grid, Form, Segment, Button, Header, Message, Icon } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../../firebase';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        errors: [],\r\n        loading: false\r\n    };\r\n\r\n    displayErrors = (errors) => errors.map((error, i) => <p key={i}> {error.message} </p>);\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.isFormValid(this.state)){\r\n            this.setState({ errors: [], loading: true })\r\n            firebase\r\n                .auth()\r\n                .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n                .then(signedInUser => {\r\n                    this.setState({ loading: false });\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                    this.setState({ errors: this.state.errors.concat(err), loading: false });\r\n                })\r\n        }\r\n    };\r\n\r\n    isFormValid = ({ email, password }) => email && password;\r\n\r\n    handleInputError = (errors, inputName) => {\r\n        return errors.some(error => error.message.toLowerCase().includes(inputName)) ? \"error\" : \"\";\r\n    }\r\n\r\n  render () {\r\n    const { email, password, errors, loading } = this.state;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{maxWidth: 450}}>\r\n            <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\r\n                <Icon name=\"code branch\" color=\"violet\" />\r\n                Login to DevChat\r\n            </Header>\r\n            <Form onSubmit={this.handleSubmit} size=\"large\">\r\n                <Segment stacked> \r\n                    <Form.Input \r\n                        fluid name=\"email\" \r\n                        icon=\"mail\" \r\n                        iconPosition=\"left\" \r\n                        placeholder=\"Email Address\" \r\n                        type=\"email\"\r\n                        onChange={this.handleChange} \r\n                        value={email}\r\n                        className={this.handleInputError(errors, \"email\")}\r\n                    />\r\n\r\n                    <Form.Input \r\n                        fluid name=\"password\" \r\n                        icon=\"lock\" \r\n                        iconPosition=\"left\" \r\n                        placeholder=\"Password\" \r\n                        type=\"password\"\r\n                        onChange={this.handleChange} \r\n                        value={password}\r\n                        className={this.handleInputError(errors, \"password\")}\r\n                    />\r\n\r\n                    <Button className={loading ? 'loading': '' } disabled={loading} color=\"violet\" fluid size=\"large\">Submit</Button>\r\n                </Segment>\r\n            </Form>\r\n            {errors.length > 0 && (\r\n                <Message error>\r\n                    <h3>Error</h3>\r\n                    {this.displayErrors(errors)}\r\n                </Message>\r\n            )}\r\n            <Message>Don't have an account? <Link to=\"/register\">Register</Link> </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Grid, Form, Segment, Button, Header, Message, Icon } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../../firebase';\r\nimport md5 from 'md5';\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirmation: '',\r\n        errors: [],\r\n        loading: false,\r\n        usersRef: firebase.database().ref('users')\r\n    };\r\n\r\n    isFormValid = () => {\r\n        let errors = [];\r\n        let error;\r\n\r\n        if (this.isFormEmpty(this.state)) {\r\n            //throw error\r\n            error = { message: 'Fill in all fields' };\r\n            this.setState({ errors: errors.concat(error) });\r\n            return false;\r\n        } else if (!this.isPasswordValid(this.state)) {\r\n            //throw error\r\n            error = { message: 'Password is invalid' };\r\n            this.setState({ errors: errors.concat(error) });\r\n            return false;\r\n        } else {\r\n            //form valid\r\n            return true;\r\n        }\r\n    }\r\n\r\n    displayErrors = (errors) => errors.map((error, i) => <p key={i}> {error.message} </p>);\r\n\r\n    isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\r\n        return !username.length || !email.length || !password.length || !passwordConfirmation.length;\r\n    }\r\n\r\n    isPasswordValid = ({ password, passwordConfirmation }) => {\r\n        if (password.length < 6 || passwordConfirmation.length < 6) {\r\n            return false;\r\n        } else if (password !== passwordConfirmation) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.isFormValid()){\r\n            this.setState({ errors: [], loading: true })\r\n            firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n                .then(createdUser => {\r\n                    console.log(createdUser);\r\n                    createdUser.user.updateProfile({\r\n                        displayName: this.state.username,\r\n                        photoURL: `https://gravatar.com/avatar/${md5(createdUser.user.email)}?d=identicon`\r\n                    })\r\n                    .then(() => {\r\n                        this.saveUser(createdUser).then(() => {\r\n                            this.setState({ loading: false });\r\n                        })\r\n                    })\r\n                    .catch(err => {\r\n                        this.setState({ errors: this.state.errors.concat(err), loading: false });\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    this.setState({ errors: this.state.errors.concat(err), loading: false });\r\n                })\r\n        }\r\n    }\r\n\r\n    saveUser = (createdUser) => {\r\n        return this.state.usersRef.child(createdUser.user.uid).set({\r\n            name: createdUser.user.displayName,\r\n            avatar: createdUser.user.photoURL\r\n        });\r\n    }\r\n\r\n    handleInputError = (errors, inputName) => {\r\n        return errors.some(error => error.message.toLowerCase().includes(inputName)) ? \"error\" : \"\";\r\n    }\r\n\r\n  render () {\r\n    const { username, email, password, passwordConfirmation, errors, loading } = this.state;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{maxWidth: 450}}>\r\n            <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\r\n                <Icon name=\"puzzle piece\" color=\"orange\" />\r\n                Register For DevChat\r\n            </Header>\r\n            <Form onSubmit={this.handleSubmit} size=\"large\">\r\n                <Segment stacked> \r\n                    <Form.Input \r\n                        fluid name=\"username\" \r\n                        icon=\"user\" \r\n                        iconPosition=\"left\" \r\n                        placeholder=\"Username\" \r\n                        type=\"text\"\r\n                        onChange={this.handleChange} \r\n                        value={username}\r\n                        className={this.handleInputError(errors, \"username\")}\r\n                    />\r\n\r\n                    <Form.Input \r\n                        fluid name=\"email\" \r\n                        icon=\"mail\" \r\n                        iconPosition=\"left\" \r\n                        placeholder=\"Email Address\" \r\n                        type=\"email\"\r\n                        onChange={this.handleChange} \r\n                        value={email}\r\n                        className={this.handleInputError(errors, \"email\")}\r\n                    />\r\n\r\n                    <Form.Input \r\n                        fluid name=\"password\" \r\n                        icon=\"lock\" \r\n                        iconPosition=\"left\" \r\n                        placeholder=\"Password\" \r\n                        type=\"password\"\r\n                        onChange={this.handleChange} \r\n                        value={password}\r\n                        className={this.handleInputError(errors, \"password\")}\r\n                    />\r\n\r\n                    <Form.Input \r\n                        fluid name=\"passwordConfirmation\" \r\n                        icon=\"repeat\" \r\n                        iconPosition=\"left\" \r\n                        placeholder=\"Password Confirmation\" \r\n                        type=\"password\"\r\n                        onChange={this.handleChange}\r\n                        value={passwordConfirmation} \r\n                        className={this.handleInputError(errors, \"password\")}\r\n                    />\r\n\r\n                    <Button className={loading ? 'loading': '' } disabled={loading} color=\"orange\" fluid size=\"large\">Submit</Button>\r\n                </Segment>\r\n            </Form>\r\n            {errors.length > 0 && (\r\n                <Message error>\r\n                    <h3>Error</h3>\r\n                    {this.displayErrors(errors)}\r\n                </Message>\r\n            )}\r\n            <Message>Already a User? <Link to=\"/login\">Login</Link> </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport * as actionTypes from '../actions/types';\r\n\r\nconst initialUserState = {\r\n    currentUser: null,\r\n    isLoading: true\r\n}\r\n\r\nconst user_reducer = (state = initialUserState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER: \r\n            return {\r\n                currentUser: action.payload.currentUser,\r\n                isLoading: false\r\n            }\r\n        case actionTypes.CLEAR_USER:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialChannelState = {\r\n    currentChannel: null\r\n}\r\n\r\nconst channel_reducer = (state = initialChannelState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_CURRENT_CHANNEL:\r\n            return {\r\n                ...state,\r\n                currentChannel: action.payload.currentChannel\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user: user_reducer,\r\n    channel: channel_reducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React, { Component } from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\n\r\nclass Spinner extends Component {\r\n  render () {\r\n    return (\r\n        <Dimmer active>\r\n            <Loader size=\"huge\" content={\"Preparing your chats...\"} />\r\n        </Dimmer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from './firebase';\n\nimport { BrowserRouter as Router, Switch, Route, withRouter } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider, connect } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport { setUser, clearUser } from './actions';\nimport Spinner from './components/Spinner/Spinner';\n\nconst store = createStore( rootReducer, composeWithDevTools());\n\nclass Root extends Component {\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.props.setUser(user);\n                this.props.history.push('/');\n            } else {\n                this.props.history.push('/login');\n                this.props.clearUser();\n            }\n        })\n    }\n\n    render () {\n        return this.props.isLoading ? <Spinner /> : (\n                <Switch>\n                    <Route exact path=\"/\" component={App} />\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/register\" component={Register} />\n                </Switch>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(connect(mapStateToProps, { setUser, clearUser })(Root));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <RootWithAuth />\n        </Router>\n    </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}